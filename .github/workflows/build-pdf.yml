name: Build PDF on push

on:
  push:
    branches: [ "main", "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create version.tex
        id: ver
        shell: bash
        run: |
          SHORT_SHA="$(git rev-parse --short HEAD)"
          CL_NUM="$(git rev-list --count HEAD)"
          RUN_NUM="${GITHUB_RUN_NUMBER}"
          DATE="$(date -u +'%Y-%m-%d')"
          {
            echo "short_sha=$SHORT_SHA"
            echo "cl_num=$CL_NUM"
            echo "run_num=$RUN_NUM"
            echo "date=$DATE"
          } >> "$GITHUB_OUTPUT"

          printf '%% Auto-generated by GitHub Actions\n' > version.tex
          printf '\\newcommand{\\builddate}{%s}\n' "$DATE" >> version.tex
          printf '\\newcommand{\\changeset}{%s}\n' "$SHORT_SHA" >> version.tex
          printf '\\newcommand{\\changelist}{%s}\n' "$CL_NUM" >> version.tex
          printf '\\newcommand{\\buildnum}{%s}\n' "$RUN_NUM" >> version.tex
          printf '%% Example: Version \\buildnum{} (CL \\changelist{}, SHA \\changeset{}, \\builddate{})\n' >> version.tex


      - name: Build LaTeX
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          latexmk_use_xelatex: true
          # Uncomment and edit if you need extra packages
          # pre_compile: |
          #   tlmgr update --self
          #   tlmgr install minted siunitx titlesec caption pgfplots

      - name: Save and commit PDF
        run: |
          mkdir -p builds
          cp main.pdf "builds/main_${{ steps.ver.outputs.changelist }}.pdf"
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add builds/*.pdf version.tex
          git commit -m "CI: build PDF CL=${{ steps.ver.outputs.changelist }}" || exit 0
          git push
