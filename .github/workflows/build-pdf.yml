name: Build PDF on push

on:
  push:
    branches: [ "main", "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create version.tex (and expose outputs)
        id: ver
        run: |
          SHORT_SHA="$(git rev-parse --short HEAD)"
          CL_NUM="$(git rev-list --count HEAD)"
          RUN_NUM="${GITHUB_RUN_NUMBER}"
          DATE="$(date -u +'%Y-%m-%d')"

          # expose values to later steps
          {
            echo "short_sha=$SHORT_SHA"
            echo "cl_num=$CL_NUM"
            echo "run_num=$RUN_NUM"
            echo "date=$DATE"
          } >> "$GITHUB_OUTPUT"

          # write the TeX file
          cat > version.tex <<'EOF'
% Auto-generated by GitHub Actions
\newcommand{\builddate}{'"$DATE"'}
\newcommand{\changeset}{'"$SHORT_SHA"'}
\newcommand{\changelist}{'"$CL_NUM"'}
\newcommand{\buildnum}{'"$RUN_NUM"'}
% Example: Version \buildnum{} (CL \changelist{}, SHA \changeset{}, \builddate{})
EOF

      - name: Build LaTeX
        uses: xu-cheng/latex-action@v3
        with:
          root_file: main.tex
          latexmk_use_xelatex: true
          # If your doc needs extras, uncomment:
          # pre_compile: |
          #   tlmgr update --self
          #   tlmgr install minted siunitx titlesec caption pgfplots
          #   apt-get update && apt-get install -y python3-pygments

      - name: Save and commit PDF
        run: |
          mkdir -p builds
          OUT="builds/main_${{ steps.ver.outputs.date }}_${{ steps.ver.outputs.short_sha }}.pdf"
          cp main.pdf "$OUT"

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUT" version.tex
          git commit -m "CI: PDF build (CL=${{ steps.ver.outputs.cl_num }}, SHA=${{ steps.ver.outputs.short_sha }})" || exit 0
          git push
